import React, { useState } from 'react';
import './ApplicationForm.css';

const ApplicationForm = () => {
  const [name, setName] = useState('');
  const [phone, setPhone] = useState('');
  const [email, setEmail] = useState('');
  const [status, setStatus] = useState('');

  const sendTelegramMessage = async () => {
    const token = '8369319591:AAGeckLrAsR7DGjlhAolURKNa71AaXsE5UY'; // <-- –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω!
    const chatId = '429960232'; // <-- —ç—Ç–æ —Ç–≤–æ–π chat_id
    const message = `üíå *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç –Ω–∞–ª–æ–≥–æ–≤*\n\nüë§ *–ò–º—è:* ${name}\nüìû *–¢–µ–ª–µ—Ñ–æ–Ω:* ${phone}\nüìß *–ü–æ—á—Ç–∞:* ${email}`;

    const res = await fetch(`https://api.telegram.org/bot${token}/sendMessage`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        chat_id: chatId,
        text: message,
        parse_mode: 'Markdown',
      }),
    });

    if (res.ok) {
      setStatus('‚úÖ –ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!');
      setName('');
      setPhone('');
      setEmail('');
    } else {
      setStatus('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.');
    }
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    if (!name || !phone || !email) {
      setStatus('‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è.');
      return;
    }
    sendTelegramMessage();
  };

  return (
    <form className="application-form" id="form" onSubmit={handleSubmit}>
      <h2>–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É</h2>
      <input
        type="text"
        placeholder="–í–∞—à–µ –∏–º—è"
        value={name}
        onChange={(e) => setName(e.target.value)}
      />
      <input
        type="tel"
        placeholder="–¢–µ–ª–µ—Ñ–æ–Ω"
        value={phone}
        onChange={(e) => setPhone(e.target.value)}
      />
      <input
        type="email"
        placeholder="–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞"
        value={email}
        onChange={(e) => setEmail(e.target.value)}
      />
      <button type="submit">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
      {status && <p className="status-message">{status}</p>}
    </form>
  );
};

export default ApplicationForm;
